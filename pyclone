import subprocess
import json
from pyfzf.pyfzf import FzfPrompt
from concurrent.futures import ThreadPoolExecutor

def clone_repo(repo_name):
    selected_repo = next(repo for repo in repos if repo['nameWithOwner'] == repo_name)
    print(f"Cloning {selected_repo['nameWithOwner']}...")
    clone_command = f"gh repo clone {selected_repo['nameWithOwner']}"
    subprocess.run(clone_command, shell=True)
    print(f"Cloned {selected_repo['nameWithOwner']}!")

# List all your repositories in JSON format, including the updated timestamp
repos_command = "gh repo list --json nameWithOwner,updatedAt --limit 200"
repos_output = subprocess.check_output(repos_command, shell=True, text=True)
repos = json.loads(repos_output)

# Sort the repositories by recent modification and extract the names
repo_names = [repo['nameWithOwner'] for repo in sorted(repos, key=lambda x: x['updatedAt'], reverse=True)]

# Use pyfzf to select a repository to clone
fzf = FzfPrompt()
title = "Select one or more repositories to clone (use CTRL + SPACE to select multiple):"
selected_titles = fzf.prompt(repo_names, "--prompt='{}' --multi --bind='ctrl-space:toggle' ".format(title))

# Clone selected repositories using gh repo clone
if selected_titles:
    with ThreadPoolExecutor() as executor:
        executor.map(clone_repo, selected_titles)
    print("Done cloning all selected repositories!")
else:
    print("No repository selected.")
